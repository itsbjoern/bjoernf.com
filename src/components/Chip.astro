---
import Icon from "./Icon.astro";
import Clear from "@/images/icons/Clear.svg?raw";

interface Props {
  variant?: "contained" | "outlined" | "text";
  label: string;
  clickable?: boolean;
  icon?: string;
  to?: string;
  class?: string;
}

const {
  variant = "text",
  clickable,
  icon,
  label,
  to,
  class: _class,
} = Astro.props;
const Wrapped = to ? "a" : "div";
---

<div class:list={["wrapper", variant, _class]}>
  <Wrapped
    class:list={["container", clickable && "clickable"]}
    href={to ? to : undefined}
    target={!to?.startsWith("/") ? "_blank" : undefined}
  >
    {icon ? <Icon icon={icon} /> : null}
    <span>{label}</span>
  </Wrapped>
</div>

<style>
  .wrapper {
    font-size: 0.8125rem;
    display: inline-flex;
    max-width: 100%;
    border-radius: 16px;
    overflow: hidden;
  }

  .outlined {
    border: 1px solid rgb(189, 189, 189);
    background-color: transparent;
  }

  .contained {
    background-color: rgba(0, 0, 0, 0.04);
    border: 1px solid rgba(0, 0, 0, 0.04);
  }

  .container {
    max-width: 100%;
    font-family: Roboto, Helvetica, Arial, sans-serif;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: #3f403f;
    white-space: nowrap;
    transition:
      background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    outline: 0px;
    cursor: default;
    text-decoration: none;
    padding: 4px 0 2px 0;
    vertical-align: middle;
    box-sizing: border-box;
  }

  .container span {
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 12px;
    padding-right: 12px;
    white-space: nowrap;
  }

  .container svg {
    color: #616161;
    margin-top: -2px;
    margin-left: 4px;
    margin-right: -6px;

    width: 1em;
    height: 1em;
  }

  .container .contained {
    padding: 0;
  }

  .clickable:hover {
    cursor: pointer;
    background-color: rgba(0, 0, 0, 0.04);
  }

  .clickable .container:hover {
    background-color: rgba(0, 0, 0, 0.08);
  }
</style>
