---
import Me from "@/images/me.jpg";
import LogoutIcon from "@/images/icons/Logout.svg?raw";
import AdminPanelSettingsIcon from "@/images/icons/AdminPanelSettings.svg?raw";
import ArrowCircleUpIcon from "@/images/icons/ArrowCircleUp.svg?raw";
import GithubIcon from "@/images/icons/GitHub.svg?raw";
import BlueskyIcon from "@/images/icons/Bluesky.svg?raw";

import Divider from "./Divider.astro";
import Chip from "./Chip.astro";
import Navigation from "./Navigation/Navigation.astro";
import Icon from "./Icon.astro";

const isLoggedIn = Astro.cookies.has("token");
---

<div class="neo flex flex-col gap-4 rounded-b-md bg-paper p-6">
  <div class="flex items-center justify-between">
    <div class="flex flex-row items-center">
      <img
        class="h-16 w-16 rounded-full object-cover"
        src={Me.src}
        width={Me.width}
        height={Me.height}
        alt="Picture of myself"
      />
      <div class="ml-4 flex flex-col justify-evenly">
        <div>
          <h2 id="title" class="text-2xl font-bold">Björn Friedrichs</h2>
          <audio id="name-audio">
            <source src="/name.mp3" type="audio/mpeg" />
             Your browser does not support the audio element.
          </audio>
        </div>
        <div class="flex flex-row items-center gap-1 cursor-pointer">
          <Icon icon={ArrowCircleUpIcon} />
          <span id="subtitle">That&apos;s me</span>
        </div>
      </div>
    </div>
    <Navigation />
  </div>

  <Divider />
  <div class="flex flex-wrap gap-3">
    <div class="flex flex-1 justify-start">
      {
        isLoggedIn ? (
          <div class="flex gap-3">
            <Chip
              clickable
              icon={AdminPanelSettingsIcon}
              label="Admin"
              to="/admin"
            />
            <Chip
              clickable
              icon={LogoutIcon}
              label="Sign out"
              to="/admin/logout"
            />
          </div>
        ) : null
      }
    </div>
    <div class="flex justify-end gap-3">
      <Chip
        clickable
        icon={GithubIcon}
        to="https://github.com/itsbjoern"
        label="itsbjoern"
      />
      <Chip
        clickable
        icon={BlueskyIcon}
        to="https://bsky.app/profile/bjoernf.com"
        label="@bjoernf.com"
      />
    </div>
  </div>
</div>

<script>
  const nameString = "Björn Friedrichs";
  const phoneticString = "Bjøːrn Fʁiː.dʁɪçs";

  const subtitleString = "That's me";
  const phoneticSubtitleString = "How do I say that?";

  const nameElement = document.getElementById("title")!;
  const subtitleElement = document.getElementById("subtitle")!;

  let showingRealName = true;

  const updateName = () => {
    nameElement.classList.add("glitch");
    setTimeout(() => {
      nameElement.textContent = showingRealName ? phoneticString : nameString;
      subtitleElement.textContent = showingRealName
        ? phoneticSubtitleString
        : subtitleString;
      showingRealName = !showingRealName;
    }, 500);
    setTimeout(() => {
      nameElement.classList.remove("glitch");
    }, 1000);

    setTimeout(updateName, 15000);
  };

  setTimeout(updateName, 4000);

  const nameAudio = document.getElementById("name-audio")! as HTMLAudioElement;
  subtitleElement.addEventListener("click", () => {
    nameAudio.play();
  });
</script>

<style>
  .glitch {
    animation:
      stutter 400ms cubic-bezier(0.46, 0.29, 0, 1.24) 1 400ms,
      glitch 1s ease 1 100ms;
  }

  @keyframes stutter {
    0% {
      opacity: 0;
      transform: translateX(-5%);
    }
    33% {
      opacity: 0.5;
      transform: translateX(5%);
    }
    66% {
      opacity: 0;
      transform: translateX(-5%);
    }
    100% {
      transform: none;
      opacity: 1;
    }
  }

  @keyframes glitch {
    0% {
      text-shadow:
        -2px 3px 0 red,
        2px -3px 0 blue;
    }
    50% {
      text-shadow:
        2px -3px 0 red,
        -2px 3px 0 blue;
    }
    100% {
      text-shadow: none;
    }
  }

  @keyframes strike {
    0% {
      width: 0;
    }
    100% {
      width: 100%;
    }
  }

  .strike {
    position: relative;
  }

  .strike::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 0;
    height: 2px;
    background: #fff;
    animation-name: strike;
    animation-duration: 500ms;
    animation-timing-function: linear;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-delay: 1s;
  }
</style>
